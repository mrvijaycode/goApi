basePath: /
host: localhost:9093
info:
  contact:
    email: support@swagger.io
    name: API Support - Blockchain
    url: http://www.swagger.io/support
  description: This is a sample  project.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Vijay Go API
  version: "1.0"
paths:
  /bitgoAccounts:
    get:
      consumes:
      - application/json
      description: Display the wallet accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Bitgo wallet accounts.
      tags:
      - root
  /createalgoaccount:
    get:
      consumes:
      - application/json
      description: Get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Create a new algo account.
      tags:
      - root
  /currencies:
    get:
      consumes:
      - application/json
      description: display dimiour accounts.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get Dimiour accounts.
      tags:
      - dimiour
  /currency/{coin}:
    get:
      consumes:
      - application/json
      description: Get coin
      parameters:
      - description: 'Enter coin type:'
        in: query
        name: coin
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: coin value
      tags:
      - dimiour
  /fundAccount:
    post:
      consumes:
      - application/json
      description: Funding the account
      parameters:
      - description: 'Enter valid algo account address:'
        in: query
        name: account
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Fund account
      tags:
      - root
  /pagoentities:
    get:
      consumes:
      - application/json
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Show the status of server.
      tags:
      - root
  /pagotoken:
    get:
      consumes:
      - application/json
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Show the status of server.
      tags:
      - root
  /postTransaction:
    post:
      consumes:
      - application/json
      description: Post transaction.
      parameters:
      - description: Add transaction details
        in: body
        name: transaction_details
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Show the status of server.
      tags:
      - root
schemes:
- http
swagger: "2.0"
